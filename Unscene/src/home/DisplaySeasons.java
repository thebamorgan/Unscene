/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package home;

import java.util.*;
import java.awt.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.UncheckedIOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author salwajeries
 */
public class DisplaySeasons extends javax.swing.JPanel {

    private Season Season;
    private DisplayShows parentShow;
    
    /**
     * Default Constructor
     */
    public DisplaySeasons() {
        initComponents();
    }
    
    /**
     * Overloaded Constructor
     * 
     * @param importSeason 
     */
    public DisplaySeasons(Season importSeason, DisplayShows parentShow) {
        initComponents();
        this.Season = new Season();
        this.Season = importSeason;
        this.parentShow = new DisplayShows();
        this.parentShow = parentShow;
        
        displaySeasonInfo();
    }
    

    /**
     * Display current season data
     */
    private void displaySeasonInfo() {
        
        // Initialize fields with season data
        seasonDesc.setText(Season.getSeasonDesc());
        seasonDesc.setEditable(false);
        seasonDesc.setLineWrap(true);
        seasonDesc.setWrapStyleWord(true);
        seasonRDate.setText(Season.getRDateString());
        seasonTitle.setText(Season.getSeasonTitle());
        seasonWatched.setSelected(Season.getSeasonWatched());
        
        // Setup EpW JSlider
        seasonEpWSlider.setMinimum(0);
        seasonEpWSlider.setMaximum(Season.getEpTotal());
        seasonEpWSlider.setPaintTicks(true);
        seasonEpWSlider.setPaintLabels(true);
        seasonEpWSlider.setMajorTickSpacing(1);
        seasonEpWSlider.setSnapToTicks(true);
        seasonEpWSlider.setValue(Season.getEpWatched());
        seasonEpWLabel.setText("Episodes Watched: " + Season.getEpWatched());
        
        
        // Initialize total number of episodes
        if(Season.getEpTotal() > 1)
            seasonEpT.setText(Integer.toString(Season.getEpTotal()) + " Episodes");
        else
            seasonEpT.setText(Integer.toString(Season.getEpTotal()) + " Episode");
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seasonDescScroll = new javax.swing.JScrollPane();
        seasonDesc = new javax.swing.JTextArea();
        seasonEpT = new javax.swing.JLabel();
        seasonRDate = new javax.swing.JLabel();
        seasonTitle = new javax.swing.JLabel();
        seasonEpWLabel = new javax.swing.JLabel();
        seasonEpWSlider = new javax.swing.JSlider();
        seasonWatched = new javax.swing.JCheckBox();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        seasonDesc.setColumns(20);
        seasonDesc.setRows(5);
        seasonDescScroll.setViewportView(seasonDesc);

        add(seasonDescScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 254, 208, 230));

        seasonEpT.setText("Episodes Total");
        add(seasonEpT, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 89, 208, 23));

        seasonRDate.setText("Release Date");
        add(seasonRDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 60, 208, 23));

        seasonTitle.setText("Title");
        add(seasonTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 208, 48));

        seasonEpWLabel.setText("Number of Episodes Watched:");
        add(seasonEpWLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 161, 208, 23));

        seasonEpWSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                seasonEpWSliderStateChanged(evt);
            }
        });
        seasonEpWSlider.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                seasonEpWSliderPropertyChange(evt);
            }
        });
        add(seasonEpWSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 190, 208, -1));

        seasonWatched.setText("Watched this entire season?");
        seasonWatched.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seasonWatchedActionPerformed(evt);
            }
        });
        add(seasonWatched, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 134, 208, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void seasonWatchedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seasonWatchedActionPerformed
        // Set season interest status
        if(seasonWatched.isSelected())
            Season.setSeasonWatched(true);
        else
            Season.setSeasonWatched(false);
        
        // Update show object
        parentShow.updateSeasonObject(Season);
        
        // Re-display show info
        displaySeasonInfo();
    }//GEN-LAST:event_seasonWatchedActionPerformed

    private void seasonEpWSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_seasonEpWSliderStateChanged
        Season.setEpWatched(seasonEpWSlider.getValue());
        seasonEpWLabel.setText("Episodes Watched: " + Season.getEpWatched());
        
        // Update show object
        parentShow.updateSeasonObject(Season);
    }//GEN-LAST:event_seasonEpWSliderStateChanged

    private void seasonEpWSliderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_seasonEpWSliderPropertyChange
        // NONE
    }//GEN-LAST:event_seasonEpWSliderPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea seasonDesc;
    private javax.swing.JScrollPane seasonDescScroll;
    private javax.swing.JLabel seasonEpT;
    private javax.swing.JLabel seasonEpWLabel;
    private javax.swing.JSlider seasonEpWSlider;
    private javax.swing.JLabel seasonRDate;
    private javax.swing.JLabel seasonTitle;
    private javax.swing.JCheckBox seasonWatched;
    // End of variables declaration//GEN-END:variables
}
